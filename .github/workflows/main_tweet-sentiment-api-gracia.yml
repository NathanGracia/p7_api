name: Build and deploy Python app to Azure Web App - tweet-sentiment-api-gracia

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: tweet-sentiment-api-gracia
  AZURE_RESOURCE_GROUP: tweet-sentiment-api-gracia_group   # ‚ö†Ô∏è remplacez-moi
  PYTHON_VERSION: '3.12'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      # (Optionnel) vos tests ici

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !.venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D64199748E074BB4B7D6BE2DA20F2024 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F8492EB3A06B41A5BB161F30E2721EDF }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0D7A72B4BB0B4F88B94BF13C2535AA48 }}

      # üëâ Active l'installation automatique de requirements.txt par Oryx pendant le d√©ploiement
      - name: Enable Oryx remote build on App Service
        run: |
          az webapp config appsettings set \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$AZURE_WEBAPP_NAME" \
            --settings SCM_DO_BUILD_DURING_DEPLOYMENT=1 PYTHON_VERSION=${PYTHON_VERSION}

      - name: Deploy to Azure Web App with gunicorn
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          package: .
          # FastAPI (ASGI) :
          startup-command: gunicorn -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000 app.main:app
          # Flask (WSGI) : utilisez plut√¥t
          # startup-command: gunicorn -w 4 -b 0.0.0.0:8000 app.main:app
